+ [[../index.org][Main Index]]
+ [[./index.org][Problems]]

* Consecutive prime sum
*** Problem 50
The prime 41, can be written as the sum of six consecutive primes:

41 = 2 + 3 + 5 + 7 + 11 + 13

This is the longest sum of consecutive primes that adds to a prime below
one-hundred.

The longest sum of consecutive primes below one-thousand that adds to a prime,
contains 21 terms, and is equal to 953.

Which prime, below one-million, can be written as the sum of the most
consecutive primes?

*** Clojure
#+BEGIN_SRC clojure
  (defn prime-sieve-to-n
    ([^long n]
     (let [not-prime (doto (boolean-array (inc n))
                       (aset 0 true)
                       (aset 1 true))
           primes (long-array (inc n))]
       (loop [p (int 0), i (int 2)]
         (if (<= i n)
           (if (aget ^booleans not-prime i)
             (recur p (inc i))
             (do
               (aset ^longs primes p i)
               (loop [j (* 2 i)]
                 (when (<= j n)
                   (aset ^booleans not-prime j true)
                   (recur (+ j i))))
               (recur (inc p) (inc i))))
           (take p primes))))))

  ;; By using reductions on the primes, I end up with a way to find the sum from
  ;; one prime index to another. So I can find the sum from index 3 to 9 by taking
  ;; the reduction of 9 and subtracting 3.
  (defn cummulative-sum-of-seq [reduced-vec i j]
    (if (= i 0)
      (get reduced-vec j)
      (let [i-val (get reduced-vec (dec i))
            j-val (get reduced-vec j)]
        (Math/abs (- i-val j-val)))))

  (->> (let [biggest 1000000
             primes-under-1-mil (vec (prime-sieve-to-n biggest))
             primes-set (set primes-under-1-mil)
             highest-index (dec (count primes-under-1-mil))
             cummulative-sum-primes (vec (reductions + primes-under-1-mil))]
         (for [i (range (inc highest-index))]
           (for [j (range (inc highest-index))
                 :while (< (cummulative-sum-of-seq cummulative-sum-primes i j) biggest)
                 :when (and
                        (< i j)
                        (primes-set (cummulative-sum-of-seq cummulative-sum-primes i j)))]
             [(inc (- j i)) (cummulative-sum-of-seq cummulative-sum-primes i j)]
             )))
       (mapcat identity)
       (reduce (fn [[a _ :as a-1]
                    [b _ :as b-1]]
                 (if (< a b) b-1 a-1)))) ;; => [543 997651]


#+END_SRC
