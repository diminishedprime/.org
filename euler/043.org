+ [[../index.org][Main Index]]
+ [[./index.org][Problems]]

* Sub-string divisibility
*** Problem 43
The number, 1406357289, is a 0 to 9 pandigital number because it is made up of
each of the digits 0 to 9 in some order, but it also has a rather interesting
sub-string divisibility property.

Let d1 be the 1st digit, d2 be the 2nd digit, and so on. In this way, we note
the following:

d2d3d4=406 is divisible by 2
d3d4d5=063 is divisible by 3
d4d5d6=635 is divisible by 5
d5d6d7=357 is divisible by 7
d6d7d8=572 is divisible by 11
d7d8d9=728 is divisible by 13
d8d9d10=289 is divisible by 17

Find the sum of all 0 to 9 pandigital numbers with this property.

*** Clojure
#+BEGIN_SRC clojure
  (require '[clojure.math.combinatorics :as combo])

  (def indexes (range 2 9))

  (def divisors [2 3 5 7 11 13 17])

  (defn seq->number [num-vec]
    (Integer/parseInt (reduce str num-vec)))

  (defn index-number [n num-vec]
    (subvec num-vec (dec n) (+ n 2)))

  (defn divisible-by-index? [n num]
    (zero? (mod num (nth divisors (- n 2)))))

  (defn index-has-property? [num-vec index]
    (divisible-by-index? index
                         (seq->number (index-number index num-vec))))

  (defn vec-has-property?
    [num-vec]
    (every? #(divisible-by-index? %
                                  (seq->number (index-number % num-vec))) indexes))



  (->> (combo/permutations (vec (range 10)))
       (filter #(not= 0 (first %)))
       (filter vec-has-property?)
       (map #(reduce str %))
       (map #(BigInteger. %))
       (reduce +)) ;; => 16695334890
#+END_SRC
