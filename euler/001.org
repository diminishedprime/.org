+ [[../index.org][Main Index]]
+ [[./index.org][Problems]]

* Multiples of 3 and 5
*** Problem 1
If we list all the natural numbers below 10 that are multiples of 3 or 5, we get
3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.

*** Clojure
#+BEGIN_SRC clojure
  (def positive-integers (rest (range)))

  (def threshold 1000)

  (def multiples-of-three-less-than-threshold
    (take-while #(< % threshold)
                (map #(*' 3 %) positive-integers)))

  (def multiples-of-five-less-than-threshold
    (take-while #(< % threshold)
                (map #(*' 5 %) positive-integers)))

  (def x-ored (distinct
               (concat multiples-of-five-less-than-threshold
                       multiples-of-three-less-than-threshold)))

  (reduce + x-ored) ;; => 233168
#+END_SRC

#+BEGIN_SRC clojure
  (def positive-integers (rest (range)))

  (defn x-of-n
    [n]
    (map #(* n %) positive-integers))

  (let [threshold 1000
        xs-of [3 5]
        smallest-xs-of (apply min xs-of)]
    (->> (map x-of-n xs-of)
         (apply interleave)
         distinct
         (take (* (count xs-of) (quot threshold smallest-xs-of)))
         (filter #(< % threshold))
         (reduce +))) ;; => 233168


#+END_SRC
