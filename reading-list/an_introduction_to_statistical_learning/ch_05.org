[[../index.org][Main Index]]
[[../index.org][Reading List]]
[[../an_introduction_to_statistical_learning.org][Book]]

* Resampling Methods
** Lectures
   + [X] [[https://www.youtube.com/playlist?list=PL5-da3qGB5IA6E6ZNXu7dp89_uv8yocmf][Playlist]]
     + [X] [[https://www.youtube.com/watch?v=_2ij6eaaSl0][Estimating Prediction Error and Validation Set Approach]]
     + [X] [[https://www.youtube.com/watch?v=nZAM5OXrktY][K-fold Cross-Validation]]
     + [X] [[https://www.youtube.com/watch?v=S06JpVoNaA0][Cross-Validation: The Right and Wrong Ways]]
     + [X] [[https://www.youtube.com/watch?v=p4BYWX7PTBM][The Bootstrap]]
     + [X] [[https://www.youtube.com/watch?v=BzHz0J9a6k0][More on the Bootstrap]]
     + [X] [[https://www.youtube.com/watch?v=6dSXlqHAoMk][Lab: Cross-Validation]]
     + [X] [[https://www.youtube.com/watch?v=YVSmsWoBKnA][Lab: The Bootstrap]]
** Reading List
1. [X] Cross-Validation
   1. [X] The Validation Set Approach
   2. [X] Leave-One-Out Cross-Validation
   3. [X] k-Fold Cross-Validation
   4. [X] Bias-Variance Trade-Off for k-Fold Cross-Validation
   5. [X] Cross-Validation on Classification Problems
2. [X] The Bootstrap
3. [X] Lab: Cross-Validation and the Bootstrap
   1. [X] The Validation Set Approach
      #+BEGIN_SRC R
        library(ISLR)
        set.seed(1)
        train=sample(392, 196)
        lm.fit=lm(mpg~horsepower, data=Auto, subset=train)
        attach(Auto)
        mean((mpg-predict(lm.fit, Auto))[-train]^2)

        lm.fit2=lm(mpg~poly(horsepower, 2), data=Auto, subset=train)
        mean((mpg-predict(lm.fit2, Auto))[-train]^2)

        lm.fit3=lm(mpg~poly(horsepower, 3), data=Auto, subset=train)
        mean((mpg-predict(lm.fit3, Auto))[-train]^2)

        set.seed(2)
        train=sample(392, 196)
        lm.fit=lm(mpg~horsepower, data=Auto, subset=train)
        attach(Auto)
        mean((mpg-predict(lm.fit, Auto))[-train]^2)

        lm.fit2=lm(mpg~poly(horsepower, 2), data=Auto, subset=train)
        mean((mpg-predict(lm.fit2, Auto))[-train]^2)

        lm.fit3=lm(mpg~poly(horsepower, 3), data=Auto, subset=train)
        mean((mpg-predict(lm.fit3, Auto))[-train]^2)
      #+END_SRC
   2. [X] Leave-One-Out Cross-Validation
      #+BEGIN_SRC R
        library(ISLR)
        attach(Auto)
        set.seed(1)

        glm.fit = glm(mpg~horsepower, data=Auto)
        coef(glm.fit)

        lm.fit = lm(mpg~horsepower, data=Auto)
        coef(glm.fit)

        library(boot)
        glm.fit = glm(mpg~horsepower, data=Auto)
        cv.err = cv.glm(Auto, glm.fit)
        cv.err$delta

        cv.error = rep(0,5)
        for (i in 1:5) {
            glm.fit=glm(mpg~poly(horsepower, i), data=Auto)
            cv.error[i] = cv.glm(Auto, glm.fit)$delta[1]
        }
        cv.error
      #+END_SRC
   3. [X] k-Fold Cross-Validation
      #+BEGIN_SRC R
        library(ISLR)
        attach(Auto)

        set.seed(17)
        cv.error.10 = rep(0, 10)

        for (i in 1:10) {
            glm.fit = glm(mpg~poly(horsepower, i), data=Auto)
            cv.error.10[i] = cv.glm(Auto, glm.fit, K=10)$delta[1]
        }
        cv.error.10
      #+END_SRC
   4. [X] The Bootstrap
      #+BEGIN_SRC R
        alpha.fn = function(data, index) {
            X = data$X[index]
            Y = data$Y[index]
            varX = var(X)
            varY = var(Y)
            covXY = cov(X, Y)
            return ((varY - covXY) / (varX + varY - 2 * covXY))
        }
        alpha.fn(Portfolio, 1:100)

        set.seed(1)
        alpha.fn(Portfolio, sample(100, 100, replace=T))

        boot(Portfolio, alpha.fn, R=1000)

        boot.fn = function(data, index) {
            return (coef(lm(mpg~horsepower, data=data, subset=index)))
        }
        boot.fn(Auto, 1:392)


        set.seed(1)
        boot.fn(Auto, sample(392, 392, replace=T))

        boot(Auto, boot.fn, 1000)

        summary(lm(mpg~horsepower, data=Auto))$coef

        boot.fn = function(data, index) {
            return (coefficients(lm(mpg~horsepower+I(horsepower^2), data=data, subset=index)))
        }
        set.seed(1)
        boot(Auto, boot.fn, 1000)

        summary(lm(mpg~horsepower+I(horsepower^2), data=Auto))$coef
      #+END_SRC
4. [ ] Exercises
