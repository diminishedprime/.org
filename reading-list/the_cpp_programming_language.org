[[../index.org][Main Index]]
[[./index.org][Reading List]]

* The C++ Programming Language (4th Edition)
  1. [ ] Notes to the Reader (06:54 mins)
     1. [ ] The Structure of This Book (06:54 mins)
     2. [ ] The Design of C++ (09:12 mins)
     3. [ ] Learning C++ (04:36 mins)
     4. [ ] History (11:30 mins)
     5. [ ] Advice (01:09 mins)
     6. [ ] References (05:45 mins)
  2. [ ] A Tour of C++: The Basics (01:09 mins)
     1. [ ] Introduction (01:09 mins)
     2. [ ] The Basics (10:21 mins)
     3. [ ] User-Defined Types (04:36 mins)
     4. [ ] Modularity (06:54 mins)
     5. [ ] Postscript (01:09 mins)
     6. [ ] Advice (01:09 mins)
  3. [ ] A Tour of C++: Abstraction Mechanisms (01:09 mins)
     1. [ ] Introduction (01:09 mins)
     2. [ ] Classes (13:48 mins)
     3. [ ] Copy and Move (06:54 mins)
     4. [ ] Templates (06:54 mins)
     5. [ ] Advice (03:27 mins)
  4. [ ] A Tour of C++: Containers and Algorithms (03:27 mins)
     1. [ ] Libraries (03:27 mins)
     2. [ ] Strings (01:09 mins)
     3. [ ] Stream I/O (04:36 mins)
     4. [ ] Containers (08:03 mins)
     5. [ ] Algorithms (09:12 mins)
     6. [ ] Advice (01:09 mins)
  5. [ ] A Tour of C++: Concurrency and Utilities (01:09 mins)
     1. [ ] Introduction (01:09 mins)
     2. [ ] Resource Management (02:18 mins)
     3. [ ] Concurrency (10:21 mins)
     4. [ ] Small Utility Components (04:36 mins)
     5. [ ] Regular Expressions (01:09 mins)
     6. [ ] Math (04:36 mins)
     7. [ ] Advice (01:09 mins)
  6. [ ] Types and Declarations (03:27 mins)
     1. [ ] The ISO C++ Standard (03:27 mins)
     2. [ ] Types (14:57 mins)
     3. [ ] Declarations (16:06 mins)
     4. [ ] Objects and Values (02:18 mins)
     5. [ ] Type Aliases (01:09 mins)
     6. [ ] Advice (03:27 mins)
  7. [ ] Pointers, Arrays, and References (01:09 mins)
     1. [ ] Introduction (01:09 mins)
     2. [ ] Pointers (02:18 mins)
     3. [ ] Arrays (05:45 mins)
     4. [ ] Pointers into Arrays (08:03 mins)
     5. [ ] Pointers and const (02:18 mins)
     6. [ ] Pointers and Ownership (01:09 mins)
     7. [ ] References (11:30 mins)
     8. [ ] Advice (02:18 mins)
  8. [ ] Structures, Unions, and Enumerations (01:09 mins)
     1. [ ] Introduction (01:09 mins)
     2. [ ] Structures (12:39 mins)
     3. [ ] Unions (05:45 mins)
     4. [ ] Enumerations (06:54 mins)
     5. [ ] Advice (01:09 mins)
  9. [ ] Statements (01:09 mins)
     1. [ ] Introduction (01:09 mins)
     2. [ ] Statement Summary (01:09 mins)
     3. [ ] Declarations as Statements (01:09 mins)
     4. [ ] Selection Statements (05:45 mins)
     5. [ ] Iteration Statements (04:36 mins)
     6. [ ] goto Statements (01:09 mins)
     7. [ ] Comments and Indentation (02:18 mins)
     8. [ ] Advice (01:09 mins)
  10. [ ] Expressions (01:09 mins)
      1. [ ] Introduction (01:09 mins)
      2. [ ] A Desk Calculator (14:57 mins)
      3. [ ] Operator Summary (08:03 mins)
      4. [ ] Constant Expressions (05:45 mins)
      5. [ ] Implicit Type Conversion (04:36 mins)
      6. [ ] Advice (02:18 mins)
  11. [ ] Select Operations (04:36 mins)
      1. [ ] Etc. Operators (04:36 mins)
      2. [ ] Free Store (10:21 mins)
      3. [ ] Lists (04:36 mins)
      4. [ ] Lambda Expressions (09:12 mins)
      5. [ ] Explicit Type Conversion (05:45 mins)
      6. [ ] Advice (02:18 mins)
  12. [ ] Functions (11:30 mins)
      1. [ ] Function Declarations (11:30 mins)
      2. [ ] Argument Passing (12:39 mins)
      3. [ ] Overloaded Functions (04:36 mins)
      4. [ ] Pre- and Postconditions (02:18 mins)
      5. [ ] Pointer to Function (04:36 mins)
      6. [ ] Macros (05:45 mins)
      7. [ ] Advice (02:18 mins)
  13. [ ] Exception Handling (11:30 mins)
      1. [ ] Error Handling (11:30 mins)
      2. [ ] Exception Guarantees (01:09 mins)
      3. [ ] Resource Management (05:45 mins)
      4. [ ] Enforcing Invariants (04:36 mins)
      5. [ ] Throwing and Catching Exceptions (12:39 mins)
      6. [ ] A vector Implementation (13:48 mins)
      7. [ ] Advice (03:27 mins)
  14. [ ] Namespaces (02:18 mins)
      1. [ ] Composition Problems (02:18 mins)
      2. [ ] Namespaces (09:12 mins)
      3. [ ] Modularization and Interfaces (06:54 mins)
      4. [ ] Composition Using Namespaces (13:48 mins)
      5. [ ] Advice (02:18 mins)
  15. [ ] Source Files and Programs (01:09 mins)
      1. [ ] Separate Compilation (01:09 mins)
      2. [ ] Linkage (12:39 mins)
      3. [ ] Using Header Files (11:30 mins)
      4. [ ] Programs (03:27 mins)
      5. [ ] Advice (03:27 mins)
  16. [ ] Classes (01:09 mins)
      1. [ ] Introduction (01:09 mins)
      2. [ ] Class Basics (23:00 mins)
      3. [ ] Concrete Classes (10:21 mins)
      4. [ ] Advice (02:18 mins)
  17. [ ] Construction, Cleanup, Copy, and Move (02:18 mins)
      1. [ ] Introduction (02:18 mins)
      2. [ ] Constructors and Destructors (06:54 mins)
      3. [ ] Class Object Initialization (12:39 mins)
      4. [ ] Member and Base Initialization (08:03 mins)
      5. [ ] Copy and Move (11:30 mins)
      6. [ ] Generating Default Operations (09:12 mins)
      7. [ ] Advice (02:18 mins)
  18. [ ] Overloading (02:18 mins)
      1. [ ] Introduction (02:18 mins)
      2. [ ] Operator Functions (06:54 mins)
      3. [ ] A Complex Number Type (09:12 mins)
      4. [ ] Type Conversion (04:36 mins)
      5. [ ] Advice (02:18 mins)
  19. [ ] Special Operators (13:48 mins)
      1. [ ] Introduction (13:48 mins)
      2. [ ] Special Operators (13:48 mins)
      3. [ ] A String Class (11:30 mins)
      4. [ ] Friends (05:45 mins)
      5. [ ] Advice (01:09 mins)
  20. [ ] Derived Classes (01:09 mins)
      1. [ ] Introduction (01:09 mins)
      2. [ ] Derived Classes (05:45 mins)
      3. [ ] Class Hierarchies (16:06 mins)
      4. [ ] Abstract Classes (03:27 mins)
      5. [ ] Access Control (08:03 mins)
      6. [ ] Pointers to Members (04:36 mins)
      7. [ ] Advice (02:18 mins)
  21. [ ] Class Hierarchies (12:39 mins)
      1. [ ] Introduction (12:39 mins)
      2. [ ] Design of Class Hierarchies (12:39 mins)
      3. [ ] Multiple Inheritance (18:24 mins)
      4. [ ] Advice (01:09 mins)
  22. [ ] Run-Time Type Information (01:09 mins)
      1. [ ] Introduction (01:09 mins)
      2. [ ] Class Hierarchy Navigation (12:39 mins)
      3. [ ] Double Dispatch and Visitors (04:36 mins)
      4. [ ] Construction and Destruction (01:09 mins)
      5. [ ] Type Identification (03:27 mins)
      6. [ ] Uses and Misuses of RTTI (02:18 mins)
      7. [ ] Advice (02:18 mins)
  23. [ ] Templates (03:27 mins)
      1. [ ] Introduction and Overview (03:27 mins)
      2. [ ] A Simple String Template (04:36 mins)
      3. [ ] Type Checking (03:27 mins)
      4. [ ] Class Template Members (10:21 mins)
      5. [ ] Function Templates (11:30 mins)
      6. [ ] Template Aliases (01:09 mins)
      7. [ ] Source Code Organization (03:27 mins)
      8. [ ] Advice (01:09 mins)
  24. [ ] Generic Programming (01:09 mins)
      1. [ ] Introduction (01:09 mins)
      2. [ ] Algorithms and Lifting (04:36 mins)
      3. [ ] Concepts (05:45 mins)
      4. [ ] Making Concepts Concrete (11:30 mins)
      5. [ ] Advice (02:18 mins)
  25. [ ] Specialization (01:09 mins)
      1. [ ] Introduction (01:09 mins)
      2. [ ] Template Parameters and Arguments (09:12 mins)
      3. [ ] Specialization (10:21 mins)
      4. [ ] Advice (02:18 mins)
  26. [ ] Instantiation (01:09 mins)
      1. [ ] Introduction (01:09 mins)
      2. [ ] Template Instantiation (03:27 mins)
      3. [ ] Name Binding (14:57 mins)
      4. [ ] Advice (01:09 mins)
  27. [ ] Templates and Hierarchies (01:09 mins)
      1. [ ] Introduction (01:09 mins)
      2. [ ] Parameterization and Hierarchy (05:45 mins)
      3. [ ] Hierarchies of Class Templates (02:18 mins)
      4. [ ] Template Parameters as Base Classes (11:30 mins)
      5. [ ] Advice (02:18 mins)
  28. [ ] Metaprogramming (02:18 mins)
      1. [ ] Introduction (02:18 mins)
      2. [ ] Type Functions (09:12 mins)
      3. [ ] Control Structures (06:54 mins)
      4. [ ] Conditional Definition: Enable_if (08:03 mins)
      5. [ ] A Compile-Time List: Tuple (08:03 mins)
      6. [ ] Variadic Templates (10:21 mins)
      7. [ ] SI Units Example (06:54 mins)
      8. [ ] Advice (03:27 mins)
  29. [ ] A Matrix Design (04:36 mins)
      1. [ ] Introduction (04:36 mins)
      2. [ ] A Matrix Template (05:45 mins)
      3. [ ] Matrix Arithmetic Operations (04:36 mins)
      4. [ ] Matrix Implementation (10:21 mins)
      5. [ ] Solving Linear Equations (06:54 mins)
      6. [ ] Advice (02:18 mins)
  30. [ ] Standard Library Summary (04:36 mins)
      1. [ ] Introduction (04:36 mins)
      2. [ ] Headers (03:27 mins)
      3. [ ] Language Support (02:18 mins)
      4. [ ] Error Handling (17:15 mins)
      5. [ ] Advice (02:18 mins)
  31. [ ] STL Containers (09:12 mins)
      1. [ ] Introduction (09:12 mins)
      2. [ ] Container Overview (09:12 mins)
      3. [ ] Operations Overview (10:21 mins)
      4. [ ] Containers (20:42 mins)
      5. [ ] Container Adaptors (04:36 mins)
      6. [ ] Advice (03:27 mins)
  32. [ ] STL Algorithms (03:27 mins)
      1. [ ] Introduction (03:27 mins)
      2. [ ] Algorithms (03:27 mins)
      3. [ ] Policy Arguments (02:18 mins)
      4. [ ] Nonmodifying Sequence Algorithms (03:27 mins)
      5. [ ] Modifying Sequence Algorithms (08:03 mins)
      6. [ ] Sorting and Searching (09:12 mins)
      7. [ ] Min and Max (01:09 mins)
      8. [ ] Advice (02:18 mins)
  33. [ ] STL Iterators (08:03 mins)
      1. [ ] Introduction (08:03 mins)
      2. [ ] Iterator Adaptors (04:36 mins)
      3. [ ] Range Access Functions (02:18 mins)
      4. [ ] Function Objects (01:09 mins)
      5. [ ] Function Adaptors (04:36 mins)
      6. [ ] Advice (02:18 mins)
  34. [ ] Memory and Resources (14:57 mins)
      1. [ ] Introduction (14:57 mins)
      2. [ ] ‘‘Almost Containers’’ (14:57 mins)
      3. [ ] Resource Management Pointers (10:21 mins)
      4. [ ] Allocators (08:03 mins)
      5. [ ] The Garbage Collection Interface (03:27 mins)
      6. [ ] Uninitialized Memory (02:18 mins)
      7. [ ] Advice (02:18 mins)
  35. [ ] Utilities (09:12 mins)
      1. [ ] Introduction (09:12 mins)
      2. [ ] Time (09:12 mins)
      3. [ ] Compile-Time Rational Arithmetic (01:09 mins)
      4. [ ] Type Functions (11:30 mins)
      5. [ ] Minor Utilities (03:27 mins)
      6. [ ] Advice (02:18 mins)
  36. [ ] Strings (03:27 mins)
      1. [ ] Introduction (03:27 mins)
      2. [ ] Character Classification (03:27 mins)
      3. [ ] Strings (14:57 mins)
      4. [ ] Advice (02:18 mins)
  37. [ ] Regular Expressions (05:45 mins)
      1. [ ] Regular Expressions (05:45 mins)
      2. [ ] regex (06:54 mins)
      3. [ ] Regular Expression Functions (04:36 mins)
      4. [ ] Regular Expression Iterators (04:36 mins)
      5. [ ] regex_traits (01:09 mins)
      6. [ ] Advice (02:18 mins)
  38. [ ] I/O Streams (03:27 mins)
      1. [ ] Introduction (03:27 mins)
      2. [ ] The I/O Stream Hierarchy (04:36 mins)
      3. [ ] Error Handling (01:09 mins)
      4. [ ] I/O Operations (19:33 mins)
      5. [ ] Stream Iterators (02:18 mins)
      6. [ ] Buffering (08:03 mins)
      7. [ ] Advice (02:18 mins)
  39. [ ] Locales (03:27 mins)
      1. [ ] Handling Cultural Differences (03:27 mins)
      2. [ ] Class locale (06:54 mins)
      3. [ ] Class facet (06:54 mins)
      4. [ ] Standard facets (34:30 mins)
      5. [ ] Convenience Interfaces (03:27 mins)
      6. [ ] Advice (02:18 mins)
  40. [ ] Numerics (01:09 mins)
      1. [ ] Introduction (01:09 mins)
      2. [ ] Numerical Limits (03:27 mins)
      3. [ ] Standard Mathematical Functions (01:09 mins)
      4. [ ] complex Numbers (02:18 mins)
      5. [ ] A Numerical Array: valarray (11:30 mins)
      6. [ ] Generalized Numerical Algorithms (04:36 mins)
      7. [ ] Random Numbers (11:30 mins)
      8. [ ] Advice (01:09 mins)
  41. [ ] Concurrency (02:18 mins)
      1. [ ] Introduction (02:18 mins)
      2. [ ] Memory Model (05:45 mins)
      3. [ ] Atomics (09:12 mins)
      4. [ ] volatile (01:09 mins)
      5. [ ] Advice (02:18 mins)
  42. [ ] Threads and Tasks (01:09 mins)
      1. [ ] Introduction (01:09 mins)
      2. [ ] Threads (10:21 mins)
      3. [ ] Avoiding Data Races (18:24 mins)
      4. [ ] Task-Based Concurrency (17:15 mins)
      5. [ ] Advice (03:27 mins)
  43. [ ] The C Standard Library (01:09 mins)
      1. [ ] Introduction (01:09 mins)
      2. [ ] Files (01:09 mins)
      3. [ ] The printf() Family (04:36 mins)
      4. [ ] C-Style Strings (01:09 mins)
      5. [ ] Memory (02:18 mins)
      6. [ ] Date and Time (03:27 mins)
      7. [ ] Etc. (01:09 mins)
      8. [ ] Advice (02:18 mins)
  44. [ ] Compatibility (01:09 mins)
      1. [ ] Introduction (01:09 mins)
      2. [ ] C++11 Extensions (03:27 mins)
      3. [ ] C/C++ Compatibility (09:12 mins)
      4. [ ] Advice (02:18 mins)
