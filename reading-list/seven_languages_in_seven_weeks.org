[[../index.org][Main Index]]
[[./index.org][Reading List]]

* [[http://search.safaribooksonline.com/book/programming/9781680500059/firstchapter][Seven Languages in Seven Weeks]]
1. [X] Introduction
2. [X] Ruby
   + [X] Quick History
   + [X] Day 1: Finding A Nanny
     #+BEGIN_SRC ruby
       # Print the string, Hello, world!
       (puts "Hello, world!")

       # For the string “Hello, Ruby,” find the index of the word “Ruby.”
       ("Hello, Ruby,".index("Ruby"))

       # Print your name ten times.
       10.times do
         puts "Your name"
       end

       # Print the string “This is sentence number 1,” where the number 1 changes from
       # 1 to 10.
       num = 1
       11.times do |num|
         puts "This is sentence number #{num}"
         num = num + 1
       end

       #Run a Ruby program from a file.
       # (This is sorta what I'm doing right now...)

       # Bonus problem: If you’re feeling the need for a little more, write a program
       # that picks a random number. Let a player guess the number, telling the player
       # whether the guess is too low or too high.

       #(Hint: rand(10) will generate a random number from 0 to 9, and gets will read a
       #string from the keyboard that you can translate to an integer.)

       def guessANumber
         randomNum = rand(10)
         guessedCorrectly = false
         while !guessedCorrectly
           puts "Try to guess the number!"
           guess = gets
           guessAsNumber = guess.to_i
           if guessAsNumber == randomNum
             puts "You guessed correctly!"
             guessedCorrectly = true
           else puts "Try again!"
           end
         end
       end
     #+END_SRC
   + [ ] Day 2: Floating Down From The Sky
     #+BEGIN_SRC ruby
       def tell_the_truth(options={})
         if options[:profession] == :lawyer
           'it could be believed that this is almost certainly not false.'
         else
           true
         end
       end

       tell_the_truth(:profession => :lawyer)
       tell_the_truth(:prefession => :shipbuilder)
       tell_the_truth()

       # Code Blocks and Yield
       3.times {puts 'hiya there, kiddo'}

       animals = ['lions and', 'tigers and', 'bears', 'oh my']
       animals.each { |a| puts a}

       # You can pass around blocks
       def call_block(&block)
         block.call
       end
       def pass_block(&block)
         call_block(&block)
       end
       pass_block {puts 'Hello, Block'}

       # Defining Classes
       class Tree
         attr_accessor :children, :node_name

         def initialize(name, children=[])
           @children = children
           @node_name = name
         end

         def visit_all(&block)
           visit &block
           children.each { |c| c.visit_all &block}
         end

         def visit(&block)
           block.call self
         end
       end

       ruby_tree = Tree.new("Ruby",
                            [Tree.new("Reia"),
                             Tree.new("MacRuby")])

       puts "Visiting a node"
       ruby_tree.visit { |node| puts node.node_name}

       puts "Visiting entire tree"
       ruby_tree.visit_all { |node| puts node.node_name}


       # Writing a Mixin
       module ToFile
         def filename
           "object_#{self.object_id}.txt"
         end
         def to_f
           File.open(filename, 'w') { |f| f.write(to_s)}
         end
       end
     #+END_SRC
