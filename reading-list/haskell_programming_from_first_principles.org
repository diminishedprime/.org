+ [[../index.org][Main Index]]
+ [[./index.org][Reading List]]

* Haskell Book [66%]
1. [X] All You Need Is Lambda [100%]
   1. [X] All You Need Is Lambda
   2. [X] What's A Function
   3. [X] Lotsa Lambdas
   4. [X] Beta Reduction
   5. [X] Bound And Free Variables
   6. [X] Alpha Equivalence
   7. [X] Multiple Arguments
   8. [X] Evaluation is Simplification
   9. [X] Combinators
   10. [X] Divergence
   11. [X] Summary
   12. [X] [[./haskell_programming_from_first_principles/01.12.hs][Exercises]]
   13. [X] Answers
   14. [X] Definitions
   15. [X] Follow-up resources.
2. [X] Hello Haskell [100%]
   1. [X] Hello Haskell
   2. [X] Interacting with Haskell Code
   3. [X] Understanding Expressions
   4. [X] Functions - [[./haskell_programming_from_first_principles/02_04.lhs][Exercises]]
   5. [X] Infix Operators - [[./haskell_programming_from_first_principles/02_05.lhs][Exercises]]
   6. [X] Declaring Values [[./haskell_programming_from_first_principles/02_06.lhs][Exercises]]
   7. [X] Arithmetic functions in Haskell
   8. [X] Negative Numbers
   9. [X] Parenthesizing infix functions
   10. [X] Laws for quotients and remainders
   11. [X] Evaluation
   12. [X] Let and Where [[./haskell_programming_from_first_principles/02_12.hs][Exercises]]
   13. [X] [[./haskell_programming_from_first_principles/02_13.hs][Exercises]]
   14. [X] Definitions
   15. [X] Follow-up resources.
3. [X] Strings [100%]
   1. [X] Printing Strings
   2. [X] A first look at types
   3. [X] Printing simple strings [[./haskell_programming_from_first_principles/03_03.hs][Exercises]]
   4. [X] Types of concatenation functions [[./haskell_programming_from_first_principles/03_04.hs][Exercises]]
   5. [X] Concatenation and scoping
   6. [X] More List Functions
   7. [X] [[./haskell_programming_from_first_principles/03_07.hs][Chapter Exercises]]
   8. [X] Definitions
4. [X] Basic Datatypes[100%]
   1. [X] Basic Datatypes
   2. [X] [[./haskell_programming_from_first_principles/04_02.hs][Anatomy of a data declaration]]
   3. [X] Numeric Types
   4. [X] [[./haskell_programming_from_first_principles/04_04.hs][Comparing Values]]
   5. [X] Tuples
   6. [X] Lists
   7. [X] [[./haskell_programming_from_first_principles/04_07.hs][Chapter Exercises]]
   8. [X] Definitions
   9. [X] Answers
5. [X] Types [100%]
   1. [X] Types
   2. [X] What are Types?
   3. [X] Querying and Reading Types
   4. [X] Typeclass constrained type variables [[./haskell_programming_from_first_principles/05_04.hs][Intermission: Exercises]]
   5. [X] Currying [[./haskell_programming_from_first_principles/05_05.hs][Intermission: Exercises]]
   6. [X] Polymorphism [[./haskell_programming_from_first_principles/05_06.hs][Intermission: Exercises]]
   7. [X] [[./haskell_programming_from_first_principles/05_07.hs][Type Inference]]
   8. [X] Asserting Types for declarations
   9. [X] [[./haskell_programming_from_first_principles/05_09.hs][Chapter Exercises]]
   10. [X] Definitions
   11. [X] Follow-up resources
6. [X] Typeclasses
   1. [X] Typeclasses
   2. [X] What are type classes?
   3. [X] Back to Bool
   4. [X] Eq
   5. [X] Num
   6. [X] Type-defaulting typeclasses
   7. [X] [[./haskell_programming_from_first_principles/06_07.hs][Ord]]
   8. [X] Enum
   9. [X] Show
   10. [X] Read
   11. [X] Instances are dispatched by type
   12. [X] [[./haskell_programming_from_first_principles/06_12.hs][Writing typeclass instances]]
   13. [X] Gimme more operations
   14. [X] [[./haskell_programming_from_first_principles/06_14.hs][Chapter Exercises]]
   15. [X] Chapter Definitions
   16. [X] Typeclass inheritance, partial
   17. [X] Follow-up resources
7. [-] More functional patterns 207
   1. [X] Make it func-y
   2. [X] Arguments and parameters
   3. [ ] [[./haskell_programming_from_first_principles/07_03.hs][Anonymous functions]]
   4. [ ] Pattern matching
   5. [ ] Case expressions
   6. [ ] Higher-order functions
   7. [ ] Guards
   8. [ ] Function composition
   9. [ ] Point-free style
   10. [ ] Demonstrating composition
   11. [ ] Chapter Exercises
   12. [ ] Chapter Definitions
   13. [ ] Follow-up resources
8. [ ] Recursion
   1. [ ]
   2. [ ]
   3. [ ]
   4. [ ]
   5. [ ]
   6. [ ]
   7. [ ]
9. [ ] Lists
